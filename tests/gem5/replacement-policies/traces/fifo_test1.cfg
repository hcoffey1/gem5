# -*- coding: utf-8 -*-
# Copyright (c) 2019 Mingyuan
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met: redistributions of source code must retain the above copyright
# notice, this list of conditions and the following disclaimer;
# redistributions in binary form must reproduce the above copyright
# notice, this list of conditions and the following disclaimer in the
# documentation and/or other materials provided with the distribution;
# neither the name of the copyright holders nor the names of its
# contributors may be used to endorse or promote products derived from
# this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# Authors: Mingyuan Xiang

# access pattern: A, B, C, D, E, F, A, B, C, D
# Each letter represents a 128-bit address range.

# If you have a 512B cache with 4-way associativity, and each cache
# line is 64B with FIFO replacement policy, you will observe:
# m, m, m, m, m, m, m, m, m, m, where 'm' means miss, and 'h' means hit.
# Explanation of this result:
# A,B,C,D are misses, now the cache stores (A*,B,C,D) and A marked as the head
# of the queue.
# E searches for a victim and selects A. Now the cache stores (E, B* C, D).
# F searches for a victim and selects B. Now the cache stores (E, F, C*, D).
# A searches for a victim and selects C. Now the cache stores (E, F, A, D*).
# B searches for a victim and selects D. Now the cache stores (E*, F, A, B).
# C searches for a victim and selects E. Now the cache stores (C, F*, A, B).
# D searches for a victim and selects F. Now the cache stores (C, D, A*, B).

# state 0: access from A to D
# state 1: access E and F
# state 2: access from A to D
STATE 0 270000 LINEAR 100 0 511 64 30000 30000 0
STATE 1 150000 LINEAR 100 512 767 64 30000 30000 0
STATE 2 270000 LINEAR 100 0 511 64 30000 30000 0
STATE 3 1000000 IDLE
INIT 0
TRANSITION 0 1 1
TRANSITION 1 2 1
TRANSITION 2 3 1
TRANSITION 3 3 1
