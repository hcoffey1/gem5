# -*- coding: utf-8 -*-
# Copyright (c) 2019 Mingyuan
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met: redistributions of source code must retain the above copyright
# notice, this list of conditions and the following disclaimer;
# redistributions in binary form must reproduce the above copyright
# notice, this list of conditions and the following disclaimer in the
# documentation and/or other materials provided with the distribution;
# neither the name of the copyright holders nor the names of its
# contributors may be used to endorse or promote products derived from
# this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# Authors: Mingyuan Xiang

# access pattern: A, B, C, D, A, B, E, F, A, B
# Each letter represents a 128-bit address range.
# Suppose  you have a 512B cache with 4-way associativity, and each cache
# line is 64B. This test can be used to test the correctness of Second Chance
# replacement policy. The Second Chance replacement policy will keep the block
# 'A' and 'B' in the cache because of the second chance bit. More specifically,
# with Second Chance replacement policy, you will observe:
# m, m, m, m, h, h, m, m, h, h, where 'm' means miss, and 'h' means hit.
# Explanation of the result:
# A,B,C,D are misses. The cache stores (A0,B0,C0,D0). The number after each
# letter is the second chance bit, which would be set after a re-reference.
# A,B are hit. Now the cache stores (A1,B1,C0,D0).
# E searches a victim and selects C. Now the cache stores (A1,B1,E0,D0).
# F searches a victim and selects D. Now the cache stores (A1,B1,E0,F0).
# A,B are hits.

# state 0: access from A to D
# state 1: access A and B
# state 2: access E and F
# state 3: access A and B
STATE 0 270000 LINEAR 100 0 511 64 30000 30000 0
STATE 1 150000 LINEAR 100 0 255 64 30000 30000 0
STATE 2 150000 LINEAR 100 512 767 64 30000 30000 0
STATE 3 150000 LINEAR 100 0 255 64 30000 30000 0
STATE 4 1000000 IDLE
INIT 0
TRANSITION 0 1 1
TRANSITION 1 2 1
TRANSITION 2 3 1
TRANSITION 3 4 1
TRANSITION 4 4 1
